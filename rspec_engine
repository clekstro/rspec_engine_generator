#!/usr/bin/env ruby

require 'thor'

class RspecEngine < Thor
  include Thor::Actions

  option :mountable, type: :boolean, default: true
  desc "new NAME", "Build a new rspec-ready engine named NAME"
  def new(name)
    command = %{rails plugin new #{name} #{options[:mountable] ? '--mountable ' : ''}--skip-test-unit --skip-bundle --dummy-path=spec/dummy}
    system command
    inside name do
      insert_into_file "#{name}.gemspec", :after => 's.add_development_dependency "sqlite3"' do
        %{\n  s.add_development_dependency "rspec-rails"\n  s.add_development_dependency "capybara"}
      end
      run "bundle install"
      run "rails g rspec:install"
      gsub_file 'spec/spec_helper.rb', /..\/config\/environment/, 'dummy/config/environment'
      insert_into_file "Rakefile", :after => "load 'rails/tasks/engine.rake'" do
        %{\n\nrequire 'rspec/core/rake_task'\nRSpec::Core::RakeTask.new(:spec)\ntask :default => :spec}
      end
      run 'git add . && git commit -m"added rspec"'
      empty_directory "spec/requests"
      create_file "spec/requests/requests_helper.rb", "require 'spec_helper.rb'\nrequire 'capybara/rspec'"
      create_file "spec/requests/root_spec.rb", <<-SPEC.gsub(/^ {8}/, '')
        require 'requests/requests_helper'

        feature "Root", %q{
          In order to provide base functionality
          As a user
          I want to view the root url
        } do

          background do
          end

          scenario "View " do
            visit '/'
            page.should have_content('Welcome')
          end
        end
      SPEC
      run 'git add . && git ci -am"installed capybara"'
    end
  end
end

RspecEngine.start(ARGV)
